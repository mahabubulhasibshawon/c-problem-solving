#include <iostream>
#include <vector>

using namespace std;

bool isMatch(string s, string p) {
    int n = s.length(), m = p.length();
    vector<vector<bool>> dp(n + 1, vector<bool>(m + 1, false));

    // Base case: empty pattern matches empty string
    dp[0][0] = true;

    // Fill first row (matching empty s with pattern)
    for (int j = 1; j <= m; j++) {
        if (p[j - 1] == '*')
            dp[0][j] = dp[0][j - 1];  // '*' can match empty sequence
    }

    // Fill the DP table
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (p[j - 1] == s[i - 1] || p[j - 1] == '?') {
                dp[i][j] = dp[i - 1][j - 1];  // Characters match
            } else if (p[j - 1] == '*') {
                dp[i][j] = dp[i][j - 1] || dp[i - 1][j];  // '*' matches empty or multiple chars
            }
        }
    }

    return dp[n][m];
}
